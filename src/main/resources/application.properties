# Application identification
spring.application.name=email verification application

# Database Connection Properties
# URL for PostgreSQL database running on localhost with emailverification database
spring.datasource.url=jdbc:postgresql://localhost:5432/emailverification
# Database authentication credentials (should be changed in production)
spring.datasource.username=your_username
spring.datasource.password=your_password
# JDBC driver for PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
# Specify the database type
spring.jpa.database=postgresql
# Hibernate dialect for PostgreSQL-specific SQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Enable logging of SQL statements for debugging
spring.jpa.show-sql=true
# Format SQL logs for better readability
spring.jpa.properties.hibernate.format_sql=true
# Database initialization strategy: create tables on startup, drop on shutdown
# Options: none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=create-drop

# Email Server Configuration (Gmail SMTP)
# SMTP server hostname
spring.mail.host=smtp.gmail.com
# SMTP server port (587 for TLS)
spring.mail.port=587
# Email account for sending verification emails
spring.mail.username=your_email@gmail.com
# App password (not regular password) - required for Gmail with 2FA
# Generate at https://myaccount.google.com/apppasswords
spring.mail.password=your_app_password
# Enable SMTP authentication
spring.mail.properties.mail.smtp.auth=true
# Enable STARTTLS for secure connection
spring.mail.properties.mail.smtp.starttls.enable=true